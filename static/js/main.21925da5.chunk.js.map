{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggelemode","htmlFor","Textform","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showalert","newtext","toLowerCase","tr","split","join","document","getElementById","select","execCommand","getSelection","removeAllRanges","filter","element","Alert","height","alert","role","word","newTxt","charAt","slice","capitalize","msg","defaultProps","abouttext","App","setMode","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.21925da5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">{props.abouttext}</a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'white'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggelemode}type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enter dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = {title: PropTypes.string,\r\n    abouttext: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps= {\r\n    title:\"Enter the title here\",\r\n    abouttext:\"About Text\"\r\n}","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function Textform(props) {\r\n\r\n    const handleUpclick =()=>{\r\n      let newText = text.toUpperCase()\r\n      setText(newText)\r\n      props.showalert(\"Converted to UpperCase\",\"success\")\r\n    }\r\n\r\n    const  handledownclick = ()=>{\r\n        let newtext = text.toLowerCase()\r\n        setText(newtext)\r\n        props.showalert(\"Converted to LowerCase\",\"success\")\r\n    }\r\n\r\n    const handleClearclick = ()=>{\r\n        let clr = \"\"\r\n        setText(clr)\r\n        props.showalert(\"Clear text\",\"success\")\r\n    }\r\n\r\n    const handleTrimclick=()=>{\r\n        let tr = text.split(/[ ]+/)\r\n        setText(tr.join(\" \"))\r\n        props.showalert(\"Remove The Extra Spaces\",\"success\")\r\n    }\r\n\r\n    const handleCopyclick=()=>{\r\n        var copyText = document.getElementById('mybox')\r\n        copyText.select();\r\n        document.execCommand('copy')\r\n        document.getSelection().removeAllRanges()\r\n        props.showalert(\"Copy to Clipboard\",\"success\")\r\n    }\r\n\r\n    \r\n    const handleCutclick=()=>{\r\n        var copyText = document.getElementById('mybox')\r\n        copyText.select();\r\n        document.execCommand('cut')\r\n        props.showalert(\"Cut the text\",\"success\")\r\n    }\r\n\r\n    const handleOnchange =(event)=>{\r\n        setText(event.target.value)\r\n\r\n    }\r\n\r\n    const [text,setText]= useState(\"\")\r\n    return (\r\n         <>\r\n        \r\n         \r\n        <div className=\"container\" style={{color:props.mode==='light'?'#042743':'white'}}>\r\n            <h2 className=\"mb-4\">{props.heading}</h2>\r\n             <div className=\"mb-3\">\r\n               <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{backgroundColor:props.mode==='dark'?'#13466e':'white',color:props.mode==='light'?'#042743':'white'}} id=\"mybox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpclick}>Convert into UpperCase</button>\r\n            <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handledownclick}>Convert into LowerrCase</button>\r\n            <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearclick}>Clear the text</button>\r\n            <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleTrimclick}>Remove the extra spaces</button>\r\n            <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopyclick}>Copy</button>\r\n            <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCutclick}>Cut</button>\r\n        </div>\r\n        <div className=\"container my-2\" style={{color:props.mode==='light'?'#042743':'white'}}>\r\n            <h2>Your text Summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} charcters</p>\r\n           <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes</p>\r\n           <h2>Preview</h2>\r\n           <p>{text.length>0?text:\"Nothing to preview it here\"}</p>\r\n        </div>\r\n         </>\r\n  \r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        let newTxt = word.toLowerCase()\r\n        return newTxt.charAt(0).toUpperCase()+newTxt.slice(1)\r\n    }\r\n    return (\r\n        <div style={{height:\"50px\"}}>\r\n           {props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n         <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg} \r\n        </div>}\r\n        </div>\r\n         \r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport Textform from './Components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\n\nfunction App() {\n\n  const [mode,setMode] = useState(\"light\");\n  const [alert,setalert] =useState(null)\n\n  const showalert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n  setTimeout(()=>{\n    setalert(null)\n  },1500)\n  }\n  const togglemode = ()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor=\"#042743\"\n      showalert(\"DarkMode has been enabled\",\"success\")\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor=\"white\"\n      showalert(\"LightMode has been enabled\",\"success\")\n    }\n  }\n  return (\n\n    <>\n   <Navbar title =\"TextUtils\"  mode={mode} toggelemode={togglemode}/>\n   <Alert alert={alert}/>\n   <div className=\"container my-3\">\n   <Textform showalert={showalert} heading=\"Try TextUtils- Word Counter,Charcter Counter,Remove Extra Spaces\" mode={mode}/>\n   </div>\n  \n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}